```json
{
  "title": "Advanced C++ Techniques",
  "description": "A 5-day course covering advanced C++ topics.",
  "course_duration_days": 5,
  "lessons": [
    {
      "title": "Introduction to Modern C++ Features",
      "video_url": "https://www.youtube.com/embed/Z0o7W7l_p4I",
      "duration_seconds": 900,
      "order": 1,
      "questions": [
        {"question": "What is a lambda expression in C++?", "choices": ["A. A type of loop", "B. An anonymous function", "C. A data structure", "D. A class member"], "correct_index": 1},
        {"question": "What is the purpose of smart pointers?", "choices": ["A. To improve code readability", "B. To manage memory automatically", "C. To increase execution speed", "D. To enhance debugging capabilities"], "correct_index": 1}
      ]
    },
    {
      "title": "Advanced Template Metaprogramming",
      "video_url": "https://www.youtube.com/embed/9l79nG7dK2Y",
      "duration_seconds": 1000,
      "order": 2,
      "questions": [
        {"question": "What is template metaprogramming?", "choices": ["A. Writing templates at compile time", "B. Writing code that generates code", "C. Writing generic functions", "D. All of the above"], "correct_index": 3},
        {"question": "What is SFINAE?", "choices": ["A. A type of error", "B. A compiler optimization technique", "C. Substitution failure is not an error", "D. A programming language"], "correct_index": 2}
      ]
    },
    {
      "title": "Concurrency in C++",
      "video_url": "https://www.youtube.com/embed/rXwK49Xj5-c",
      "duration_seconds": 800,
      "order": 3,
      "questions": [
        {"question": "What is a mutex?", "choices": ["A. A data structure", "B. A type of loop", "C. A mutual exclusion object", "D. A function"], "correct_index": 2},
        {"question": "What is a race condition?", "choices": ["A. A type of error", "B. A compiler optimization", "C. When multiple threads access shared resources simultaneously", "D. A programming language"], "correct_index": 2}
      ]
    },
    {
      "title": "Working with the Standard Template Library (STL)",
      "video_url": "https://www.youtube.com/embed/vLnPwxZ-4f4",
      "duration_seconds": 1200,
      "order": 4,
      "questions": [
        {"question": "Which STL container is best for fast random access?", "choices": ["A. list", "B. vector", "C. set", "D. map"], "correct_index": 1},
        {"question": "What is an iterator?", "choices": ["A. A data type", "B. A type of loop", "C. A pointer-like object for traversing containers", "D. A function"], "correct_index": 2}
      ]
    },
    {
      "title": "Advanced C++ Memory Management",
      "video_url": "https://www.youtube.com/embed/I-8hZfJ4c7E",
      "duration_seconds": 950,
      "order": 5,
      "questions": [
        {"question": "What is a memory leak?", "choices": ["A. A compiler error", "B. Unreleased dynamically allocated memory", "C. A type of data structure", "D. A programming language"], "correct_index": 1},
        {"question": "How can you prevent memory leaks?", "choices": ["A. Using smart pointers", "B. Properly managing dynamically allocated memory", "C. Using RAII", "D. All of the above"], "correct_index": 3}
      ]
    }
  ]
}
```
